ถ้าใช้ฟังก์ชันนอก ต้องใส่รีเทิร์น 

// Array method parameter element, index, originalArray
products = [
        { id: 123, name: 'bag' },   0   ,   products
        { id: 2, name: 'pen' },     1   ,   products
        { id: 33, name: 'BAG' },    2   ,   products

// forEach()
เข้าไปอ่านค่าelementในอาเรย์ทุกตัว 
return undefined {not return anything}

// filter()
เข้าถึงแต่ละelement ใน Array & check filter 
keep boolean if(true => add in new array)
return new array before filter

// map()
สร้าง new array โดยเก็บผลลัพธ์ของการทำงาน
มาไว้ในอาเรย์ใหม่

//find() หาค่าแรกของอาเรย์
returns the first element in array ตามเงื่อนไข
If no values ==>> undefined

//findIndex()
returns [i]  first element in array ตามเงื่อนไข
If no elements match return -1

// reduce()
// return result of operation
console.log(Array.prototype.reduce)
const total = shopingList.reduce((previousTotal, currentTotal) => {
    console.log(`Total: ${currentTotal.price * currentTotal.quantity}`)
   return previousTotal + currentTotal.price * currentTotal.quantity //=> total
}, 0)
console.log(`Total:: ${total} ============================`)    // 622

//includes() 
อาร์เรย์มีค่านี้ในรายการของมันหรือไม่
return true or false

//reverse()
ย้อนกลับอาร์เรย์ในตำแหน่งเดิม return ไปยังอาร์เรย์เดิม
อาร์เรย์ตัวแรกจะกลายเป็นอาร์เรย์สุดท้าย

//sort()
รับ parameter 2 ตัว มาเทียบกัน
1,100000,21,30,4
น้อยไปมาก  a-b = 1,4,21,30,100000
มากไปน้อย  b-a

//concat()
เอา element ใน อาเรย์มารวมกัน ต้องเอา อาเรย์ใหม่มาเก็บค่า
const a_f = a_c.concat(d_f)

//indexOf()
returns index by given element can be found in the array, 
if not found [-1].
const beasts = ['ant', 'bison', 'camel', 'duck', 'bison']
console.log(beasts.indexOf('bison'))        // 1
                                // start from index 2
console.log(beasts.indexOf('bison', 2))     // 4    bison ,.. start with index 2

// push()
adds one or more elements in ท้ายอาเรย์ตามชื่อ Array 
และรีเทิร์นขนาดอาเรย์ใหม่

// pop()
removes the last element from an array & return
 element that removed
 
 // unshift()
 adds one or more elements ต้นอาเรย์
 returns the new length
 
 // shift()
 removes the first element from first array 
 returns that removed element
 
 stack== เข้าก่อนออกทีหลัง
 Q == เข้าก่อนออกก่อน
 
 //splice()
 เปลี่ยนเนื้อหาของอาร์เรย์โดยการลบหรือ
 แทนที่องค์ประกอบที่มีอยู่และ/หรือเพิ่มองค์ประกอบใหม่เข้า
 ใส่ไว้ในอาเรย์เดิม
 
 //slice(start,end)
 หั่นอาเรย์เดิมมาใส่ไว้ในอาเรย์ใหม่
 return new array
 +x start beginElement
 -x start lastElement [,z,z,z,2,1] => [2,1]
 .slice(2,4) => [2,3] จบก่อนตัวสุดท้าย
 
 // fill()
 method changes all elements in an array to a static value, 
 returns the modified array.
console.log(Array.prototype.fill)

console.log(num)                // [1, 2, 3, 4]
                    (value,start,BefendEnd)
console.log(num.fill(9,2))      // [1, 2, 9, 9]   change value to 9 when index 2++ 
console.log(num.fill(7,2,3))    // [ 1, 2, 7, 9]  change value to 7 when index 2++ and index < 3
